{"remainingRequest":"/Users/jianghao/Desktop/clm/cameroon-app/node_modules/babel-loader/lib/index.js!/Users/jianghao/Desktop/clm/cameroon-app/src/views/shop/mock/mock.js","dependencies":[{"path":"/Users/jianghao/Desktop/clm/cameroon-app/src/views/shop/mock/mock.js","mtime":1539961079807},{"path":"/Users/jianghao/Desktop/clm/cameroon-app/node_modules/cache-loader/dist/cjs.js","mtime":1535522847293},{"path":"/Users/jianghao/Desktop/clm/cameroon-app/node_modules/babel-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["//引入mockjs\nvar Mock = require('mockjs'); // 获取 mock.Random 对象\n\n\nvar Random = Mock.Random; //使用mockjs模拟数据\n\nMock.mock('/api/data', function (req, res) {\n  //当post或get请求到/api/data路由时Mock会拦截请求并返回上面的数据\n  var list = [];\n\n  for (var i = 0; i < 30; i++) {\n    var listObject = {\n      title: Random.csentence(5, 10),\n      //随机生成一段中文文本。\n      company: Random.csentence(5, 10),\n      attention_degree: Random.integer(100, 9999),\n      //返回一个随机的整数。\n      photo: Random.image('114x83', '#00405d', '#FFF', 'Mock.js')\n    };\n    list.push(listObject);\n  }\n\n  return {\n    data: list\n  };\n});",{"version":3,"sources":["/Users/jianghao/Desktop/clm/cameroon-app/src/views/shop/mock/mock.js"],"names":["Mock","require","Random","mock","req","res","list","i","listObject","title","csentence","company","attention_degree","integer","photo","image","push","data"],"mappings":"AAAA;AACA,IAAMA,OAAOC,QAAQ,QAAR,CAAb,C,CACA;;;AACA,IAAMC,SAASF,KAAKE,MAApB,C,CACA;;AACAF,KAAKG,IAAL,CAAU,WAAV,EAAuB,UAACC,GAAD,EAAMC,GAAN,EAAc;AAAC;AAClC,MAAIC,OAAO,EAAX;;AACA,OAAI,IAAIC,IAAI,CAAZ,EAAeA,IAAI,EAAnB,EAAuBA,GAAvB,EAA4B;AACxB,QAAIC,aAAa;AACbC,aAAOP,OAAOQ,SAAP,CAAiB,CAAjB,EAAoB,EAApB,CADM;AACkB;AAC/BC,eAAST,OAAOQ,SAAP,CAAiB,CAAjB,EAAoB,EAApB,CAFI;AAGbE,wBAAkBV,OAAOW,OAAP,CAAe,GAAf,EAAoB,IAApB,CAHL;AAG+B;AAC5CC,aAAOZ,OAAOa,KAAP,CAAa,QAAb,EAAuB,SAAvB,EAAkC,MAAlC,EAA0C,SAA1C;AAJM,KAAjB;AAMAT,SAAKU,IAAL,CAAUR,UAAV;AACH;;AACD,SAAO;AACHS,UAAMX;AADH,GAAP;AAGH,CAdD","sourcesContent":["//引入mockjs\nconst Mock = require('mockjs')\n// 获取 mock.Random 对象\nconst Random = Mock.Random;\n//使用mockjs模拟数据\nMock.mock('/api/data', (req, res) => {//当post或get请求到/api/data路由时Mock会拦截请求并返回上面的数据\n    let list = [];\n    for(let i = 0; i < 30; i++) {\n        let listObject = {\n            title: Random.csentence(5, 10),//随机生成一段中文文本。\n            company: Random.csentence(5, 10),\n            attention_degree: Random.integer(100, 9999),//返回一个随机的整数。\n            photo: Random.image('114x83', '#00405d', '#FFF', 'Mock.js')\n        }\n        list.push(listObject);\n    }\n    return {\n        data: list\n    }\n})"]}]}